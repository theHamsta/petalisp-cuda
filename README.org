* petalisp-cuda

A CUDA backend for [[https://github.com/marcoheisig/Petalisp/][Petalisp]]. The project is in an early experimental phase.

** Usage

#+BEGIN_SRC lisp
(quicklisp:quickload :petalisp-cuda)

;; use petalisp-cuda as petalisp:*backend*
(petalisp-cuda:use-cuda-backend)

;; when you want to the petalisp-cuda for a specific code section
;; with potential re-use of already allocated CUDA resources
(petalisp-cuda:with-cuda-backend
    ...)

;; with-cuda-backend-raii will free all CUDA resources
;; and destroy the backend after the calculations
(petalisp-cuda:with-cuda-backend-raii
    ...)
#+END_SRC

** Requirements

- CUDA toolkit
- CUDNN (optional)

** Installation

With [[https://www.quicklisp.org/beta/][quicklisp]] installed, clone this
repository to your local projects folder:

#+BEGIN_SRC bash
git clone git@github.com:theHamsta/petalisp-cuda.git
#+END_SRC

** TODOs

- [x] sort indices for fasted dimensions
- [ ] hash CUDA array strides to recompile correctly with arrays not allocated in C-layout with alternative memory layouts
- [ ] fix super-slow lisp->native, native->lisp calls
- [ ] compile kernels not only for fixed iteration spaces
- [ ] implement reductions with CUDNN
- [ ] implement convolutions with CUDNN
- [ ] __restrict__ kernel parameters
- [ ] infer function parameters for generated __device__ functions
- [ ] Load scalars over __constant__ memory when loading from GPU RAM instead of Host RAM (transfered as kernel arguments)
- [ ] fast interpolation using textures (?)

** Debugging

You can activate logging in CUDNN by setting

#+BEGIN_SRC bash
export CUDNN_LOGDEST_DBG=stdout
#+END_SRC
or =stderr= or =filename.txt=

cl-cuda will print a lot of stuff to stdout.
This behavior can be controlled with =cl-cuda:*show-messages*=.

** Author

+ Stephan Seitz (stephan.seitz@fau.de)

** Copyright

Copyright (c) 2020 Stephan Seitz (stephan.seitz@fau.de)

** License

Licensed under the GPLv3 License.
